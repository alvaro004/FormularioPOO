/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package personobjectdbjava;
import conexionDB.Conectar;
import java.util.List;
import javax.management.StringValueExp;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alvaro Llano
 */
public class ObjectPersonForm extends javax.swing.JFrame {
    
    EntityManagerFactory emf = null;
    EntityManager em = null;
    
    /**
     * Creates new form ObjectPersonForm
     */
    public ObjectPersonForm() {
        initComponents();
        emf = null;
        em = null;
        emf = Persistence.createEntityManagerFactory("C:/base/objectPersona.odb");
        em = emf.createEntityManager();
        
        
        TextPrompt placeholder1 = new TextPrompt("Ingrese el Id del Objeto Persona", personaId);
        TextPrompt placeholder2 = new TextPrompt("Ingrese el Nombre de la Persona", personaNombre);
        TextPrompt placeholder3 = new TextPrompt("Ingrese el Apellido de la Persona", personaApellido);
        TextPrompt placeholder4 = new TextPrompt("Ingrese la Edad de la Persona", personaEdad);
        TextPrompt placeholder5 = new TextPrompt("Ingrese el Telefono de la Persona", personaTelefono);
        
        eliminarPersona.setEnabled(false);
        actualizarpersona.setEnabled(false);
        listarPersonas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePersona = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        GuardarPersona = new javax.swing.JButton();
        eliminarPersona = new javax.swing.JButton();
        actualizarpersona = new javax.swing.JButton();
        vaciarCampos = new javax.swing.JButton();
        personaId = new javax.swing.JTextField();
        personaNombre = new javax.swing.JTextField();
        personaApellido = new javax.swing.JTextField();
        personaEdad = new javax.swing.JTextField();
        personaTelefono = new javax.swing.JTextField();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 153, 153));
        jPanel2.setForeground(new java.awt.Color(204, 204, 255));

        jLabel1.setBackground(new java.awt.Color(255, 153, 153));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("FORMULARIO DE PERSONAS CON ORIENTACION A OBJETOS.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 102, 0));

        tablePersona.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nombre", "Apellido", "Edad", "Celular"
            }
        ));
        tablePersona.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePersonaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablePersona);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        GuardarPersona.setBackground(new java.awt.Color(102, 255, 102));
        GuardarPersona.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        GuardarPersona.setForeground(new java.awt.Color(102, 102, 102));
        GuardarPersona.setText("GUARDAR");
        GuardarPersona.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GuardarPersonaMouseClicked(evt);
            }
        });
        GuardarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarPersonaActionPerformed(evt);
            }
        });

        eliminarPersona.setBackground(new java.awt.Color(255, 0, 0));
        eliminarPersona.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        eliminarPersona.setForeground(new java.awt.Color(102, 102, 102));
        eliminarPersona.setText("ELIMINAR");
        eliminarPersona.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eliminarPersonaMouseClicked(evt);
            }
        });
        eliminarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarPersonaActionPerformed(evt);
            }
        });

        actualizarpersona.setBackground(new java.awt.Color(255, 255, 102));
        actualizarpersona.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        actualizarpersona.setForeground(new java.awt.Color(102, 102, 102));
        actualizarpersona.setText("ACTUALIZAR");
        actualizarpersona.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actualizarpersonaMouseClicked(evt);
            }
        });
        actualizarpersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarpersonaActionPerformed(evt);
            }
        });

        vaciarCampos.setBackground(new java.awt.Color(51, 153, 255));
        vaciarCampos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        vaciarCampos.setForeground(new java.awt.Color(102, 102, 102));
        vaciarCampos.setText("VACIAR");
        vaciarCampos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vaciarCamposMouseClicked(evt);
            }
        });
        vaciarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaciarCamposActionPerformed(evt);
            }
        });

        personaNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personaNombreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(personaEdad)
            .addComponent(personaTelefono)
            .addComponent(GuardarPersona, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(personaNombre)
            .addComponent(personaApellido)
            .addComponent(eliminarPersona, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(vaciarCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(actualizarpersona, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
            .addComponent(personaId)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(personaId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(personaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(personaApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(personaEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(personaTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(GuardarPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(eliminarPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(actualizarpersona, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(vaciarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GuardarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarPersonaActionPerformed
        // TODO add your handling code here:
        try {
            //System.out.println(personaNombre.getText());
            int id = Integer.valueOf(personaId.getText());
            String nombre = personaNombre.getText();
            String apellido = personaApellido.getText();
            int edad = Integer.valueOf(personaEdad.getText());
            String telefono = personaTelefono.getText();
            ObjectPersona objectPersona = new ObjectPersona(id, nombre, apellido, edad, telefono);
            em.getTransaction().begin();
            em.persist(objectPersona);
            em.getTransaction().commit();
            
            //Vaciar los campos
            personaId.setText("");
            personaNombre.setText("");
            personaApellido.setText("");
            personaEdad.setText("");
            personaTelefono.setText("");
            
            JOptionPane.showMessageDialog(rootPane, "Guardado Exitoso");
            
            listarPersonas();

        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(rootPane, "Error: No se pudo registrar a la persona");
        }

        //listarPersonas();
    }//GEN-LAST:event_GuardarPersonaActionPerformed

    private void GuardarPersonaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GuardarPersonaMouseClicked

    }//GEN-LAST:event_GuardarPersonaMouseClicked

    private void eliminarPersonaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminarPersonaMouseClicked
        // TODO add your handling code here:
        try {
            int fila = tablePersona.getSelectedRow();
            Object id = tablePersona.getValueAt(fila, 0);
            //verificando que lo que se envia es un entero
            //System.out.println(id.getClass().getSimpleName());
            
            ObjectPersona objectPersona = em.find(ObjectPersona.class, id);

            em.getTransaction().begin();
            em.remove(objectPersona);
            em.getTransaction().commit();
            
            JOptionPane.showMessageDialog(rootPane, "Borrado Exitoso");

            
            personaId.setText("");
            personaNombre.setText(""); 
            personaApellido.setText("");
            personaEdad.setText("");
            personaTelefono.setText("");
            
            eliminarPersona.setEnabled(false);
            actualizarpersona.setEnabled(false);
            GuardarPersona.setEnabled(true);
            personaId.setEnabled(true);

            
            listarPersonas();
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_eliminarPersonaMouseClicked

    private void eliminarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarPersonaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eliminarPersonaActionPerformed

    private void tablePersonaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePersonaMouseClicked
        // TODO add your handling code here:
        
        try {
            int fila = tablePersona.getSelectedRow();
            Object id = tablePersona.getValueAt(fila, 0);
            //verificando que lo que se envia es un entero
            //System.out.println(id.getClass().getSimpleName());
            
            ObjectPersona objectPersona = em.find(ObjectPersona.class, id);
            //deshabilitar la opcion de cambiar id
            personaId.setEnabled(false);

            String idpersona = String.valueOf(objectPersona.getIdPersona());
            String nombrepersona = objectPersona.getNombre();
            String apellidopersona = objectPersona.getApellido();
            String edadpersona = String.valueOf(objectPersona.edad);
            String telefonopersona = objectPersona.getTelefono();
            
            personaId.setText(idpersona);
            personaNombre.setText(nombrepersona); 
            personaApellido.setText(apellidopersona);
            personaEdad.setText(edadpersona);
            personaTelefono.setText(telefonopersona);

            eliminarPersona.setEnabled(true);
            actualizarpersona.setEnabled(true);
            GuardarPersona.setEnabled(false);
            

        } catch (Exception e) {
        }
    }//GEN-LAST:event_tablePersonaMouseClicked

    private void actualizarpersonaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizarpersonaMouseClicked
        // TODO add your handling code here:
        try {
            int fila = tablePersona.getSelectedRow();
            Object id = tablePersona.getValueAt(fila, 0);
            //verificando que lo que se envia es un entero
            //System.out.println(id.getClass().getSimpleName());
            
            ObjectPersona objectPersona = em.find(ObjectPersona.class, id);
            
            int idpersona = Integer.valueOf(personaId.getText());      
            String nombre = personaNombre.getText();
            String apellido = personaApellido.getText();
            int edad = Integer.valueOf(personaEdad.getText());
            String telefono = personaTelefono.getText();

            objectPersona.setIdPersona(idpersona);
            objectPersona.setNombre(nombre);
            objectPersona.setApellido(apellido);
            objectPersona.setEdad(edad);
            objectPersona.setTelefono(telefono);

            em.getTransaction().begin();
            em.persist(objectPersona);
            em.getTransaction().commit();
            
            JOptionPane.showMessageDialog(rootPane, "Actualizado Exitoso");


            personaId.setText("");
            personaNombre.setText(""); 
            personaApellido.setText("");
            personaEdad.setText("");
            personaTelefono.setText("");
            
            eliminarPersona.setEnabled(false);
            actualizarpersona.setEnabled(false);
            GuardarPersona.setEnabled(true);
            personaId.setEnabled(true);

            listarPersonas();


        } catch (Exception e) {
        }

    }//GEN-LAST:event_actualizarpersonaMouseClicked

    private void actualizarpersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarpersonaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_actualizarpersonaActionPerformed

    private void personaNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personaNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_personaNombreActionPerformed

    private void vaciarCamposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vaciarCamposMouseClicked
        // TODO add your handling code here:
        personaId.setText("");
        personaNombre.setText(""); 
        personaApellido.setText("");
        personaEdad.setText("");
        personaTelefono.setText("");

        eliminarPersona.setEnabled(false);
        actualizarpersona.setEnabled(false);
        GuardarPersona.setEnabled(true); 
        personaId.setEnabled(true);

        listarPersonas();
        
    }//GEN-LAST:event_vaciarCamposMouseClicked

    private void vaciarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaciarCamposActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vaciarCamposActionPerformed
    public void listarPersonas() {
        Query consultaPersona = em.createQuery("SELECT objectPersona FROM ObjectPersona objectPersona");
        List<ObjectPersona> ResultadosPersona = consultaPersona.getResultList();
        DefaultTableModel modelo = (DefaultTableModel) tablePersona.getModel();
        modelo.setRowCount(0);
        for (ObjectPersona objectSubPersona : ResultadosPersona) {
            modelo.addRow(new Object[]{objectSubPersona.getIdPersona(), objectSubPersona.getNombre(), objectSubPersona.getApellido(), objectSubPersona.getEdad(), objectSubPersona.getTelefono()});
        }

    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ObjectPersonForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ObjectPersonForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ObjectPersonForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ObjectPersonForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ObjectPersonForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GuardarPersona;
    private javax.swing.JButton actualizarpersona;
    private javax.swing.JButton eliminarPersona;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField personaApellido;
    private javax.swing.JTextField personaEdad;
    private javax.swing.JTextField personaId;
    private javax.swing.JTextField personaNombre;
    private javax.swing.JTextField personaTelefono;
    private javax.swing.JTable tablePersona;
    private javax.swing.JButton vaciarCampos;
    // End of variables declaration//GEN-END:variables
}
